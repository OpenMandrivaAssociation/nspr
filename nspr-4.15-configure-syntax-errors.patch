--- nspr-4.15/nspr/configure.in.omv~	2017-06-10 19:30:58.843281513 +0200
+++ nspr-4.15/nspr/configure.in	2017-06-10 19:32:12.244571159 +0200
@@ -1212,606 +1212,6 @@ esac
 dnl ========================================================
 dnl Override of system specific target options
 dnl ========================================================
-case "$target" in
-
-*-aix*)
-    AC_DEFINE(XP_UNIX)
-    AC_DEFINE(AIX)
-    AC_DEFINE(SYSV)
-    DSO_LDOPTS='-brtl -bnortllib -bM:SRE -bnoentry -bexpall -blibpath:/usr/lib:/lib'
-    AC_CHECK_HEADER(sys/atomic_op.h, AC_DEFINE(AIX_HAVE_ATOMIC_OP_H))
-    case "${target_os}" in
-    aix3.2*)
-        AC_DEFINE(AIX_RENAME_SELECT)
-        AC_DEFINE(_PR_NO_LARGE_FILES)
-        AIX_LINK_OPTS='-bnso -berok'
-        PR_MD_ASFILES=os_AIX.s
-        ;;
-    aix4.1*)
-        AC_DEFINE(AIX_TIMERS)
-        AC_DEFINE(_PR_NO_LARGE_FILES)
-        AC_DEFINE(AIX4_1)
-        MKSHLIB=
-        DSO_LDOPTS=
-        AIX_LINK_OPTS='-bnso -berok'
-        LIBNSPR='-L$(dist_libdir) -lnspr$(MOD_MAJOR_VERSION)_shr'
-        LIBPLC='-L$(dist_libdir) -lplc$(MOD_MAJOR_VERSION)_shr'
-        ;;
-    aix4.2*)
-        AC_DEFINE(AIX_TIMERS)
-        AC_DEFINE(_PR_HAVE_OFF64_T)
-        AIX_LINK_OPTS='-brtl -bnso -berok'
-        ;;
-    aix4.3*)
-        AC_DEFINE(AIX_TIMERS)
-        AC_DEFINE(_PR_HAVE_OFF64_T)
-        AC_DEFINE(AIX4_3_PLUS)
-        AC_DEFINE(HAVE_SOCKLEN_T)
-        AC_DEFINE(HAVE_FCNTL_FILE_LOCKING)
-        USE_IPV6=1
-        AIX_LINK_OPTS='-brtl -bnso -berok'
-        ;;
-    *)
-        AC_DEFINE(AIX_TIMERS)
-        AC_DEFINE(_PR_HAVE_OFF64_T)
-        AC_DEFINE(AIX4_3_PLUS)
-        AC_DEFINE(HAVE_SOCKLEN_T)
-        AC_DEFINE(HAVE_FCNTL_FILE_LOCKING)
-        USE_IPV6=1
-        AIX_LINK_OPTS='-brtl -bnso -berok'
-        ;;
-    esac
-    CFLAGS="$CFLAGS -qro -qroconst"
-    AIX_WRAP='$(DIST)/lib/aixwrap.o'
-    AIX_TMP='./_aix_tmp.o'
-    if test -n "$USE_64"; then
-        MDCPUCFG_H=_aix64.cfg
-        OBJECT_MODE=64
-    else
-        MDCPUCFG_H=_aix32.cfg
-    fi
-    PR_MD_CSRCS=aix.c
-    RESOLVE_LINK_SYMBOLS=1
-    ;;
-        
-*-beos*)
-    AC_DEFINE(XP_BEOS)
-    AC_DEFINE(BeOS)
-    AC_DEFINE(BEOS)
-    AC_DEFINE(_POSIX_SOURCE)
-    DSO_LDOPTS=-nostart
-    MDCPUCFG_H=_beos.cfg
-    USE_BTHREADS=1
-    PR_MD_ARCH_DIR=beos
-    RESOLVE_LINK_SYMBOLS=1
-    case "${target_cpu}" in
-    i*86)
-        _OPTIMIZE_FLAGS=-O2
-        _DEBUG_FLAGS='-gdwarf-2 -O0'
-        MKSHLIB='$(CCC) $(DSO_LDOPTS) -o $@'
-        AC_CHECK_LIB(bind, gethostbyaddr, [OS_LIBS="$OS_LIBS -lbind -lsocket"])
-        ;;
-    powerpc)
-        CC=mwcc
-        CCC=mwcc
-        LD=mwld
-        DSO_LDOPTS='-xms -export pragma -init _init_routine_ -term _term_routine_ -lroot -lnet /boot/develop/lib/ppc/glue-noinit.a /boot/develop/lib/ppc/init_term_dyn.o /boot/develop/lib/ppc/start_dyn.o'
-        _OPTIMIZE_FLAGS=-O2    
-        _DEBUG_FLAGS='-g -O0'
-        ;;
-    esac
-    ;;
-
-*-bsdi*)
-    AC_DEFINE(XP_UNIX)
-    AC_DEFINE(BSDI)
-    AC_DEFINE(NEED_BSDREGEX)
-
-    CFLAGS="$CFLAGS -Wall -Wno-format"
-    CXXFLAGS="$CXXFLAGS -Wall -Wno-format"
-
-    if echo "$OS_TEST" | grep -c 86 >/dev/null; then
-        CPU_ARCH=x86
-    elif echo "$OS_TEST" | grep -c sparc >/dev/null; then 
-        CPU_ARCH=sparc
-    fi
-
-    MDCPUCFG_H=_bsdi.cfg
-    PR_MD_CSRCS=bsdi.c
-
-    DSO_LDOPTS=-r
-
-    case "$target_os" in
-    bsdi1.1*)
-        AC_DEFINE(_PR_BSDI_JMPBUF_IS_ARRAY)
-        AC_DEFINE(_PR_STAT_HAS_ONLY_ST_ATIME)
-        AC_DEFINE(_PR_NEED_H_ERRNO)
-        MKSHLIB=
-        DSO_CFLAGS=
-        DSO_LDOPTS=
-        ;;
-
-    bsdi2.1*)
-        AC_DEFINE(_PR_TIMESPEC_HAS_TS_SEC)
-        AC_DEFINE(_PR_BSDI_JMPBUF_IS_ARRAY)
-        AC_DEFINE(HAVE_DLL)
-        AC_DEFINE(USE_DLFCN)
-        AC_DEFINE(_PR_STAT_HAS_ST_ATIMESPEC)
-        PR_MD_ASFILES=os_BSD_OS_386_2.s
-        ;;
-
-    bsdi4.* | bsdi5.*)
-        AC_DEFINE(_PR_SELECT_CONST_TIMEVAL)
-        AC_DEFINE(_PR_BSDI_JMPBUF_IS_STRUCT)
-        AC_DEFINE(HAVE_DLL)
-        AC_DEFINE(USE_DLFCN)
-        AC_DEFINE(_PR_STAT_HAS_ST_ATIMESPEC)
-        MKSHLIB='$(CC) -o $@ $(DSO_LDOPTS)'
-        DSO_CFLAGS=-fPIC
-        DSO_LDOPTS='-shared -Wl,-soname,$(@:$(OBJDIR)/%.so=%.so)'
-        STRIP="$STRIP -d"
-        case "$target_os" in
-        bsdi4.2* | bsdi4.3* | bsdi5.*)
-            AC_DEFINE(_PR_HAVE_GETPROTO_R)
-            AC_DEFINE(_PR_HAVE_GETPROTO_R_POINTER)
-            ;;
-        esac
-        ;;
-    *)
-        AC_DEFINE(_PR_SELECT_CONST_TIMEVAL)
-        AC_DEFINE(_PR_BSDI_JMPBUF_IS_STRUCT)
-        AC_DEFINE(HAVE_DLL)
-        AC_DEFINE(USE_DLFCN)
-        AC_DEFINE(_PR_STAT_HAS_ST_ATIMESPEC)
-        ;;
-    esac
-
-    ;;
-
-*-darwin*)
-    AC_DEFINE(XP_UNIX)
-    AC_DEFINE(DARWIN)
-    AC_DEFINE(HAVE_BSD_FLOCK)
-    AC_DEFINE(HAVE_SOCKLEN_T)
-    AC_DEFINE(HAVE_POINTER_LOCALTIME_R)
-    changequote(,)
-    HOST_DARWIN_MAJOR=`echo "$build_os" | sed -E -e 's/^darwin([0-9]+).*$/\1/'`
-    changequote([,])
-    if test "$HOST_DARWIN_MAJOR" -ge 15 ; then
-        AC_DEFINE(HAS_CONNECTX)
-    AS='$(CC) -x assembler-with-cpp'
-    CFLAGS="$CFLAGS -Wall -fno-common"
-    case "${target_cpu}" in
-        arm*)
-            CPU_ARCH=arm
-            ;;
-        i*86*|x86_64)
-            if test -n "$USE_64"; then
-                CPU_ARCH=x86_64
-            else        
-                CPU_ARCH=i386
-            fi
-            ;;
-        *)
-            CPU_ARCH=ppc
-            ;;
-    esac
-    if test "`echo $CC | grep -c '\-arch '`" = "0"; then
-        CC="$CC -arch $CPU_ARCH"
-    fi
-    AC_CHECK_HEADER(crt_externs.h, AC_DEFINE(HAVE_CRT_EXTERNS_H))
-    DSO_CFLAGS=-fPIC
-    DSO_LDOPTS='-dynamiclib -compatibility_version 1 -current_version 1 -all_load -install_name @executable_path/$@ -headerpad_max_install_names'
-    _OPTIMIZE_FLAGS=-O2
-    MKSHLIB='$(CC) $(DSO_LDOPTS) -o $@'
-    STRIP="$STRIP -x -S"
-    DLL_SUFFIX=dylib
-    USE_PTHREADS=1
-    MDCPUCFG_H=_darwin.cfg
-    PR_MD_CSRCS=darwin.c
-    PR_MD_ASFILES=os_Darwin.s
-
-    # Add Mac OS X support for loading CFM & CFBundle plugins
-    if test -f "${MACOS_SDK_DIR}/System/Library/Frameworks/Carbon.framework/Carbon"; then
-        AC_DEFINE(XP_MACOSX)
-        OS_TARGET=MacOSX
-
-        if test -n "$_MACOSX_DEPLOYMENT_TARGET" ; then
-            dnl Use the specified value
-            export MACOSX_DEPLOYMENT_TARGET=$_MACOSX_DEPLOYMENT_TARGET
-        elif test -z "$MACOSX_DEPLOYMENT_TARGET" ; then
-            dnl No value specified on the command line or in the environment,
-            dnl use the lesser of the library's minimum or the architecture's
-            dnl minimum.
-            case "${target_cpu}" in
-                powerpc*)
-                    dnl Architecture minimum 10.2
-                    export MACOSX_DEPLOYMENT_TARGET=10.2
-                    ;;
-                i*86*)
-                    dnl Architecture minimum 10.4
-                    export MACOSX_DEPLOYMENT_TARGET=10.4
-                    ;;
-            esac
-        fi
-
-        dnl MACOS_SDK_DIR will be set to the SDK location whenever one is
-        dnl in use.  NEXT_ROOT will be set and exported if it's needed for
-        dnl ld.
-
-        if test "$MACOS_SDK_DIR"; then
-            dnl Sync this section with the one in Mozilla's top level.
-
-            if test ! -d "$MACOS_SDK_DIR"; then
-                AC_MSG_ERROR([SDK not found.  When using --with-macos-sdk, you must
-specify a valid SDK.  SDKs are installed when the optional cross-development
-tools are selected during the Xcode/Developer Tools installation.])
-            fi
-
-            changequote(,)
-            CC_VERSION=`$CC -v 2>&1 | grep 'gcc version'`
-            GCC_VERSION_FULL=`echo $CC_VERSION | $PERL -pe 's/^.*gcc version ([^ ]*).*/$1/'`
-            GCC_VERSION=`echo $GCC_VERSION_FULL | $PERL -pe '(split(/\./))[0]>=4&&s/(^\d*\.\d*).*/$1/;'`
-            changequote([,])
-            GCC_VERSION_MAJOR=`echo $GCC_VERSION_FULL | $PERL -pe 's/(^\d*).*/$1/;'`
-            if test "$GCC_VERSION_MAJOR" -lt "4" ; then
-                SDK_C_FRAMEWORK="-F${MACOS_SDK_DIR}/System/Library/Frameworks"
-                if test -d "${MACOS_SDK_DIR}/Library/Frameworks" ; then
-                    SDK_C_FRAMEWORK="$SDK_C_FRAMEWORK -F${MACOS_SDK_DIR}/Library/Frameworks"
-                fi
-
-                SDK_C_INCLUDE="-isystem ${MACOS_SDK_DIR}/usr/include/gcc/darwin/${GCC_VERSION} -isystem ${MACOS_SDK_DIR}/usr/include ${SDK_C_FRAMEWORK}"
-
-                CFLAGS="$CFLAGS -nostdinc ${SDK_C_INCLUDE}"
-
-                dnl CPP needs to be set for AC_CHECK_HEADER.
-                CPP="$CPP -nostdinc ${SDK_C_INCLUDE}"
-
-                changequote(,)
-                HOST_DARWIN_MAJOR=`echo "$build_os" | sed -E -e 's/^darwin([0-9]+).*$/\1/'`
-                changequote([,])
-                if test "$HOST_DARWIN_MAJOR" -lt 9 ; then
-                    dnl The build host is running Tiger (10.4) or earlier.
-                    dnl ld support for -syslibroot is compiler-agnostic, but
-                    dnl only available on Tiger and later.  On Tiger and
-                    dnl earlier build hosts, just rely on NEXT_ROOT, because
-                    dnl it's not been shown to cause any problems.
-                    MACOS_SDK_LIBS="-L${MACOS_SDK_DIR}/usr/lib/gcc/darwin -L${MACOS_SDK_DIR}/usr/lib/gcc/darwin/${GCC_VERSION_FULL} -L${MACOS_SDK_DIR}/usr/lib ${SDK_C_FRAMEWORK}"
-                else
-                    dnl The build host is running Leopard (10.5) or later.
-                    dnl With NEXT_ROOT set, the linker will still not apply
-                    dnl it when resolving dependencies.  This causes problems
-                    dnl on Leopard, where an SDK depends on frameworks which
-                    dnl were present in earlier OS releases (and the associated
-                    dnl SDK) but not in Leopard.  -syslibroot does not have
-                    dnl this problem, but it results in harmless warnings when
-                    dnl NEXT_ROOT is set.  NEXT_ROOT needs to remain set even
-                    dnl on Leopard because the compiler uses it too.
-                    MACOS_SDK_LIBS="-Wl,-syslibroot,${MACOS_SDK_DIR}"
-                fi
-
-                LDFLAGS="${MACOS_SDK_LIBS} $LDFLAGS"
-                export NEXT_ROOT=$MACOS_SDK_DIR
-
-                if test -n "$CROSS_COMPILE" ; then
-                    dnl NEXT_ROOT will be in the environment, but it
-                    dnl shouldn't be set for the build host.  HOST_CXX is
-                    dnl presently unused.
-                    HOST_CC="NEXT_ROOT= $HOST_CC"
-                    HOST_CXX="NEXT_ROOT= $HOST_CXX"
-                fi
-            else
-                dnl gcc >= 4.0 uses different paths than above, but knows
-                dnl how to find them itself.
-                CFLAGS="$CFLAGS -isysroot ${MACOS_SDK_DIR}"
-
-                dnl CPP needs to be set for AC_CHECK_HEADER.
-                CPP="$CPP -isysroot ${MACOS_SDK_DIR}"
-
-                dnl If gcc >= 4.0.0, we're guaranteed to be on Tiger, which
-                dnl has an ld that supports -syslibroot.  Don't set
-                dnl NEXT_ROOT because it will be ignored and cause
-                dnl warnings when -syslibroot is specified.
-                if test "$GCC_VERSION_FULL" != "4.0.0" ; then
-                    dnl gcc > 4.0.0 will pass -syslibroot to ld automatically
-                    dnl based on the -isysroot it receives.
-                    LDFLAGS="$LDFLAGS -isysroot ${MACOS_SDK_DIR}"
-                else
-                    dnl gcc 4.0.0 doesn't pass -syslibroot to ld, it needs
-                    dnl to be explicit.
-                    LDFLAGS="$LDFLAGS -Wl,-syslibroot,${MACOS_SDK_DIR}"
-                fi
-            fi
-        fi
-    fi
-    ;;
-
-*-dgux*)
-    AC_DEFINE(XP_UNIX)
-    AC_DEFINE(_PR_LOCAL_THREADS_ONLY)
-    AC_DEFINE(SVR4)
-    AC_DEFINE(SYSV)
-    AC_DEFINE(DGUX)
-    AC_DEFINE(_DGUX_SOURCE)
-    AC_DEFINE(_POSIX4A_DRAFT6_SOURCE)
-    DSO_LDOPTS=-G
-    _OPTIMIZE_FLAGS=-O2
-    _DEBUG_FLAGS=
-    MDCPUCFG_H=_dgux.cfg
-    PR_MD_CSRCS=dgux.c
-    ;;
-
-*-freebsd*)
-    if test -z "$USE_NSPR_THREADS"; then
-        USE_PTHREADS=1
-    fi
-    AC_DEFINE(XP_UNIX)
-    AC_DEFINE(FREEBSD)
-    AC_DEFINE(HAVE_BSD_FLOCK)
-    AC_DEFINE(HAVE_SOCKLEN_T)
-    CFLAGS="$CFLAGS $(DSO_CFLAGS) -ansi -Wall"
-    MOZ_OBJFORMAT=`test -x /usr/bin/objformat && /usr/bin/objformat || echo elf`
-    if test "$MOZ_OBJFORMAT" = "elf"; then
-        DLL_SUFFIX=so
-    else
-        DLL_SUFFIX=so.1.0
-    fi
-    MKSHLIB='$(CC) $(DSO_LDOPTS) -o $@'
-    DSO_CFLAGS=-fPIC
-    DSO_LDOPTS='-shared -Wl,-soname -Wl,$(notdir $@)'
-    MDCPUCFG_H=_freebsd.cfg
-    PR_MD_CSRCS=freebsd.c
-    ;;
-
-*-hpux*)
-    AC_DEFINE(XP_UNIX)
-    AC_DEFINE(HPUX)
-    AC_DEFINE(_HPUX_SOURCE)
-    # OSF1 and HPUX report the POLLHUP event for a socket when the
-    # shutdown(SHUT_WR) operation is called for the remote end, even though
-    # the socket is still writeable. Use select(), instead of poll(), to
-    # workaround this problem.
-    AC_DEFINE(_PR_POLL_WITH_SELECT)
-    AC_DEFINE(_USE_BIG_FDS)
-    DSO_LDOPTS='-b +h $(notdir $@)'
-    PR_MD_CSRCS=hpux.c
-    if test "$OS_TEST" = "ia64"; then
-        DLL_SUFFIX=so
-        DSO_LDOPTS="$DSO_LDOPTS +b '\$\$ORIGIN'"
-        CPU_ARCH_TAG=_$OS_TEST 
-        if test -z "$USE_64"; then
-            COMPILER_TAG=_32
-        fi
-        PR_MD_ASFILES=os_HPUX_ia64.s
-    else
-        AC_DEFINE(hppa)
-        DLL_SUFFIX=sl
-        PR_MD_ASFILES=os_HPUX.s
-    fi
-    if test -n "$USE_64"; then
-        MDCPUCFG_H=_hpux64.cfg
-    else
-        MDCPUCFG_H=_hpux32.cfg
-    fi
-    if test -z "$GNU_CC"; then
-        CC="$CC -Ae"
-        CXX="$CXX -ext"
-        DSO_CFLAGS=+Z
-    else
-        DSO_CFLAGS=-fPIC
-        ASFLAGS="$ASFLAGS -x assembler-with-cpp"
-    fi
-
-    if test -n "$MOZILLA_CLIENT"; then
-        DEFAULT_IMPL_STRATEGY=_EMU
-    fi
-
-    if echo "$OS_RELEASE" | grep ^A.09 >/dev/null; then
-        AC_DEFINE(_PR_NEED_H_ERRNO)
-        AC_DEFINE(HPUX9)
-        DEFAULT_IMPL_STRATEGY=_EMU
-    	USE_NSPR_THREADS=1
-    fi
-
-    if echo "$OS_RELEASE" | egrep '^(A.09|B.10)' >/dev/null; then
-        AC_DEFINE(_PR_NO_LARGE_FILES)
-    fi
-
-    if echo "$OS_RELEASE" | egrep '^(B.10.10|B.10.20)' >/dev/null; then
-        AC_DEFINE(_PR_NEED_H_ERRNO)
-    fi
-
-    if echo "$OS_RELEASE" | egrep '^(B.10.10|B.10.20)' >/dev/null; then
-        AC_DEFINE(HAVE_INT_LOCALTIME_R)
-    fi
-
-    if echo "$OS_RELEASE" | egrep '^(B.10.30|B.11)' >/dev/null; then
-        AC_DEFINE(HAVE_POINTER_LOCALTIME_R)
-    fi
-
-    # HP-UX 11i v2 (B.11.23) or higher
-    changequote(<<,>>)
-    case "$OS_RELEASE" in
-    [C-Z]*|B.[2-9]*|B.1[2-9]*|B.11.[3-9]*|B.11.2[3-9]*)
-        USE_IPV6=1
-        ;;
-    esac
-    changequote([,])
-
-    if test "$OS_RELEASE" = "B.10.01"; then
-        AC_DEFINE(HPUX10)
-        DEFAULT_IMPL_STRATEGY=_EMU
-    fi
-
-    if test "$OS_RELEASE" = "B.10.10"; then
-        AC_DEFINE(HPUX10)
-        AC_DEFINE(HPUX10_10)
-        DEFAULT_IMPL_STRATEGY=_PTH
-    fi
-
-    if test "$OS_RELEASE" = "B.10.20"; then
-        AC_DEFINE(HPUX10)
-        AC_DEFINE(HPUX10_20)
-        if test -z "$GNU_CC"; then
-            CFLAGS="$CFLAGS +DAportable +DS1.1"
-            CXXFLAGS="$CXXFLAGS +DAportable +DS1.1"
-        fi
-        DEFAULT_IMPL_STRATEGY=_PTH
-    fi
-
-    if test "$OS_RELEASE" = "B.10.30"; then
-        AC_DEFINE(HPUX10)
-        AC_DEFINE(HPUX10_30)
-        if test -z "$GNU_CC"; then
-            CFLAGS="$CFLAGS +DAportable +DS1.1"
-            CXXFLAGS="$CXXFLAGS +DAportable +DS1.1"
-        fi
-        DEFAULT_IMPL_STRATEGY=_PTH
-    fi
-
-    if echo "$OS_RELEASE" | grep ^B.11 >/dev/null; then
-        AC_DEFINE(HPUX10)
-        AC_DEFINE(HPUX11)
-        AC_DEFINE(_LARGEFILE64_SOURCE)
-        AC_DEFINE(_PR_HAVE_OFF64_T)
-        AC_DEFINE(HAVE_FCNTL_FILE_LOCKING)
-        if test -z "$GNU_CC"; then
-            if test -z "$USE_64"; then
-                if test "$OS_TEST" = "ia64"; then
-                    CFLAGS="$CFLAGS +DD32"
-                    CXXFLAGS="$CXXFLAGS +DD32"
-                else
-                    CFLAGS="$CFLAGS +DAportable +DS2.0"
-                    CXXFLAGS="$CXXFLAGS +DAportable +DS2.0"
-                fi
-            else
-                if test "$OS_TEST" = "ia64"; then
-                    CFLAGS="$CFLAGS +DD64"
-                    CXXFLAGS="$CXXFLAGS +DD64"
-                else
-                    CFLAGS="$CFLAGS +DA2.0W +DS2.0"
-                    CXXFLAGS="$CXXFLAGS +DA2.0W +DS2.0"
-                fi
-            fi
-        fi
-        DEFAULT_IMPL_STRATEGY=_PTH
-    fi
-
-    if test "$DEFAULT_IMPL_STRATEGY" = "_EMU"; then
-        USE_NSPR_THREADS=1
-        USE_PTHREADS=
-        USE_USER_PTHREADS=
-    elif test "$DEFAULT_IMPL_STRATEGY" = "_PTH"; then
-        USE_PTHREADS=1
-        if test "$USE_NSPR_THREADS"; then
-            USE_PTHREADS=
-        fi
-        if test "$USE_USER_PTHREADS"; then
-            USE_PTHREADS=
-        fi
-    fi
-    ;;
-
-*-irix*)
-    AC_DEFINE(XP_UNIX)
-    AC_DEFINE(IRIX)
-    AC_DEFINE(SVR4)
-    AC_DEFINE(_SGI_MP_SOURCE)
-    AC_DEFINE(HAVE_FCNTL_FILE_LOCKING)
-    PR_MD_CSRCS=irix.c
-    PR_MD_ASFILES=os_Irix.s
-    MKSHLIB='$(LD) $(DSO_LDOPTS) -rdata_shared -shared -soname $(notdir $@) -o $@'
-    STRIP="$STRIP -f"
-    RESOLVE_LINK_SYMBOLS=1
-    if test -n "$USE_64"; then
-        MDCPUCFG_H=_irix64.cfg
-    else
-        MDCPUCFG_H=_irix32.cfg
-    fi
-    case "${target_os}" in
-    irix6*)
-        AC_DEFINE(IRIX6)
-        USE_PTHREADS=1
-        USE_N32=1
-        COMPILER_TAG=_n32
-        IMPL_STRATEGY=_PTH
-        ;;
-    irix5*)
-        AC_DEFINE(IRIX5)
-        USE_NSPR_THREADS=1
-        ;;
-    *)
-        USE_PTHREADS=1
-        USE_N32=1
-        ;;
-    esac
-    if test "$GNU_CC"; then
-        dnl
-        dnl If we are using gcc with native binutils, we need to
-        dnl suppress the
-        dnl #lineno "filename" num num
-        dnl lines, which confuse IRIX native as.  Add -Wp,-P to the
-        dnl gcc command line, which passes -P to the preprocessor.
-        dnl
-	    AS='$(CC) -Wp,-P -x assembler-with-cpp -D_ASM -mips2 $(INCLUDES)'
-	    CFLAGS="$CFLAGS -Wall -Wno-format"
-	    _OPTIMIZE_FLAGS="-O6"
-    else
-	    if test -n "$USE_N32"; then
-		AS='as -D_ASM $(INCLUDES) -n32'
-	    else
-		AS='as -D_ASM $(INCLUDES)'
-	    fi
-	    CFLAGS="$CFLAGS -fullwarn -xansi"
-	    if test "$USE_N32"; then
-	        _OPTIMIZE_FLAGS="-O -OPT:Olimit=4000"
-	    else
-	        _OPTIMIZE_FLAGS="-O -Olimit 4000"
-	    fi
-	    if test "$USE_MDUPDATE"; then
-                CFLAGS="$CFLAGS -MDupdate \$(DEPENDENCIES)"
-	    fi
-	    case "${target}" in
-	    *-irix6.*)
-	        CFLAGS="$CFLAGS -multigot"
-	        DSO_LDOPTS="-no_unresolved"
-	        if test "$USE_N32"; then
-		        CFLAGS="$CFLAGS -n32 -woff 1209"
-		        DSO_LDOPTS="$DSO_LDOPTS -n32"
-	        else
-		        if test "$USE_64"; then
-		            CFLAGS="$CFLAGS -64"
-		        else
-		            CFLAGS="$CFLAGS -32"
-		        fi
-	        fi
-	        ;;
-	    *)
-	        CFLAGS="$CFLAGS -xgot"
-	        ;;
-	    esac
-    fi
-    if test "${target_os}" = "irix5.3"; then
-	    AC_DEFINE(IRIX5_3)
-    fi
-    case "${target_os}" in
-	irix6.5)
-	    if test -z "$GNU_CC"; then
-		    CFLAGS="$CFLAGS -mips3"
-	    fi
-	    AC_DEFINE(_PR_HAVE_GETPROTO_R)
-	    AC_DEFINE(_PR_HAVE_GETPROTO_R_POINTER)
-	    AC_DEFINE(_PR_HAVE_SGI_PRDA_PROCMASK)
-	    ;;
-	irix5*)
-	    ;;
-	*)
-	    AC_DEFINE(_PR_HAVE_SGI_PRDA_PROCMASK)
-	    ;;
-	esac
-    ;;
-
-*-linux*|*-gnu*|*-k*bsd*-gnu|*-android*|*-linuxandroid*)
     if test -z "$USE_NSPR_THREADS"; then
         USE_PTHREADS=1
         IMPL_STRATEGY=_PTH
@@ -1888,651 +1288,6 @@ tools are selected during the Xcode/Deve
         fi
         ;;
     esac    
-    ;;
-
-*-mingw*|*-msys*|*-cygwin*|*-mks*)
-    AC_DEFINE(XP_PC)
-    AC_DEFINE(WIN32)
-    PR_MD_ARCH_DIR=windows
-    RESOLVE_LINK_SYMBOLS=1
-
-    if test -n "$GNU_CC"; then
-        CC="$CC -mwindows"
-        CXX="$CXX -mwindows"
-        DLL_SUFFIX=dll
-        MKSHLIB='$(CC) -shared -Wl,--export-all-symbols -Wl,--out-implib -Wl,$(IMPORT_LIBRARY) $(DLLBASE) -o $(subst $(OBJDIR)/,,$(SHARED_LIBRARY))'
-        RC=$WINDRES
-        # Use temp file for windres (bug 213281)
-        RCFLAGS='-O coff --use-temp-file'
-    else
-        LD=link
-        AR='lib -NOLOGO -OUT:"$@"'
-        AR_FLAGS=
-        RANLIB='echo not_ranlib'
-        STRIP='echo not_strip'
-        RC=rc.exe
-        GARBAGE='$(OBJDIR)/vc20.pdb $(OBJDIR)/vc40.pdb'
-        OBJ_SUFFIX=obj
-        LIB_SUFFIX=lib
-        DLL_SUFFIX=dll
-
-        # Determine compiler version
-        changequote(,)
-        _MSVC_VER_FILTER='s|.* \([0-9]\+\.[0-9]\+\.[0-9]\+\(\.[0-9]\+\)\?\).*|\1|p'
-        changequote([,])
-        CC_VERSION=`${CC} -v 2>&1 | sed -ne "$_MSVC_VER_FILTER"`
-        if test -z "$CC_VERSION"; then
-            AC_MSG_ERROR([Could not determine MSC version.])
-        fi
-
-        _CC_MAJOR_VERSION=`echo ${CC_VERSION} | awk -F\. '{ print $1 }'`
-        _CC_MINOR_VERSION=`echo ${CC_VERSION} | awk -F\. '{ print $2 }'`
-        _CC_RELEASE=`echo ${CC_VERSION} | awk -F\. '{ print $3 }'`
-        _CC_BUILD=`echo ${CC_VERSION} | awk -F\. '{ print $4 }'`
-        MSC_VER=${_CC_MAJOR_VERSION}${_CC_MINOR_VERSION}
-
-        if test "$_CC_MAJOR_VERSION" -eq "14"; then
-           dnl -DYNAMICBASE is only supported on VC8SP1 or newer,
-           dnl so be very specific here!
-           dnl VC8 is 14.00.50727.42, VC8SP1 is 14.00.50727.762
-           if test $_CC_RELEASE -gt 50727; then
-              _USE_DYNAMICBASE=1
-           elif test $_CC_BUILD -ge 762; then
-              _USE_DYNAMICBASE=1
-           fi
-           AC_DEFINE(_CRT_SECURE_NO_DEPRECATE)
-           AC_DEFINE(_CRT_NONSTDC_NO_DEPRECATE)
-        elif test $_CC_MAJOR_VERSION -ge 15; then
-           _USE_DYNAMICBASE=1    
-           AC_DEFINE(_CRT_SECURE_NO_WARNINGS)
-           AC_DEFINE(_CRT_NONSTDC_NO_WARNINGS)
-        fi
-
-        if test -n "$_USE_DYNAMICBASE"; then
-           DLLFLAGS="$DLLFLAGS -DYNAMICBASE"
-        fi
-
-        # Ensure that mt is Microsoft (R) Manifest Tool and not magnetic
-        # tape manipulation utility (or something else)
-        if test "$MSC_VER" -ge "1400"; then
-            changequote(,)
-            _MSMT_VER_FILTER='s|.* \([0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\).*|\1|p'
-            changequote([,])
-
-            MSMT_TOOL=`mt 2>&1|grep 'Microsoft (R) Manifest Tool'`
-            if test -n "$MSMT_TOOL"; then
-                MSMANIFEST_TOOL_VERSION=`echo ${MSMT_TOOL}|sed -ne "$_MSMT_VER_FILTER"`
-                if test -z "$MSMANIFEST_TOOL_VERSION"; then
-                    AC_MSG_WARN([Unknown version of the Microsoft (R) Manifest Tool.])
-                fi
-                MT=mt
-                unset MSMT_TOOL
-            else
-                AC_MSG_ERROR([Microsoft (R) Manifest Tool must be in your \$PATH.])
-            fi
-        fi
-        
-        CFLAGS="$CFLAGS -W3 -nologo -GF -Gy"
-        DLLFLAGS="$DLLFLAGS -OUT:\"\$@\""
-        _DEBUG_FLAGS=-Zi
-        _OPTIMIZE_FLAGS=-O2
-
-        PROFILE_GEN_CFLAGS="-GL"
-        PROFILE_GEN_LDFLAGS="-LTCG:PGINSTRUMENT"
-        PROFILE_USE_CFLAGS="-GL -wd4624 -wd4952"
-        PROFILE_USE_LDFLAGS="-LTCG:PGUPDATE"
-
-        if test "$MSC_VER" -ge "1800"; then
-            dnl Visual C++ 2013 requires -FS when parallel building with
-            dnl make -jN. If not specified, compiler sometimes emits C1041
-            dnl error.
-            CFLAGS="$CFLAGS -FS"
-            dnl -Gw can benefit when using linker optimization on PGO.
-            dnl http://blogs.msdn.com/b/vcblog/archive/2013/09/11/introducing-gw-compiler-switch.aspx
-            PROFILE_GEN_CFLAGS="$PROFILE_GEN_CFLAGS -Gw"
-            PROFILE_USE_CFLAGS="$PROFILE_USE_CFLAGS -Gw"
-        fi
-
-        if test -z "$MOZ_OPTIMIZE"; then
-            CFLAGS="$CFLAGS -Od"
-        fi
-
-        if test "$USE_DEBUG_RTL" = 1; then
-            if test -n "$USE_STATIC_RTL"; then
-                CFLAGS="$CFLAGS -MTd"
-            else
-                CFLAGS="$CFLAGS -MDd"
-            fi
-        else
-            if test -n "$USE_STATIC_RTL"; then
-                CFLAGS="$CFLAGS -MT"
-            else
-                CFLAGS="$CFLAGS -MD"
-            fi
-        fi
-
-        if test -n "$MOZ_DEBUG"; then
-            AC_DEFINE(_DEBUG)
-        else
-            DEFINES="$DEFINES -U_DEBUG"
-        fi
-
-        if test -n "$MOZ_DEBUG_SYMBOLS"; then
-            if test -n "$MOZ_OPTIMIZE"; then
-                DLLFLAGS="$DLLFLAGS -DEBUG -OPT:REF"
-                LDFLAGS="$LDFLAGS -DEBUG -OPT:REF"
-            else
-                DLLFLAGS="$DLLFLAGS -DEBUG"
-                LDFLAGS="$LDFLAGS -DEBUG"
-            fi
-        fi
-
-        OS_DLLFLAGS="-nologo -DLL -SUBSYSTEM:WINDOWS"
-        if test "$MSC_VER" -le "1200" -a -z "$MOZ_DEBUG_SYMBOLS"; then
-            OS_DLLFLAGS="$OS_DLLFLAGS -PDB:NONE"
-        fi
-        
-        if test "$OS_TARGET" = "WINNT"; then
-            CFLAGS="$CFLAGS -GT"
-            LIBNSPR='$(dist_libdir)/libnspr$(MOD_MAJOR_VERSION).$(LIB_SUFFIX)'
-            LIBPLC='$(dist_libdir)/libplc$(MOD_MAJOR_VERSION).$(LIB_SUFFIX)'
-        else
-            LIBNSPR='$(dist_libdir)/nspr$(MOD_MAJOR_VERSION).$(LIB_SUFFIX)'
-            LIBPLC='$(dist_libdir)/plc$(MOD_MAJOR_VERSION).$(LIB_SUFFIX)'
-        fi
-    fi # GNU_CC
-
-    if test -n "$USE_STATIC_TLS"; then
-        AC_DEFINE(_PR_USE_STATIC_TLS)
-    fi
-
-    if test "$OS_TARGET" = "WINNT"; then
-        AC_DEFINE(WINNT)
-    else
-        AC_DEFINE(WIN95)
-        # undefine WINNT as some versions of mingw gcc define it by default
-        DEFINES="$DEFINES -UWINNT"
-        AC_DEFINE(_PR_GLOBAL_THREADS_ONLY)
-    fi
-
-    if test "$CPU_ARCH" = "x86"; then
-        CPU_ARCH_TAG=
-    else
-        CPU_ARCH_TAG=$CPU_ARCH
-    fi
-
-    if test "$USE_DEBUG_RTL" = 1; then
-        OBJDIR_SUFFIX=OBJD
-    fi
-
-    case "$OS_TARGET" in
-    WINNT)
-	    MDCPUCFG_H=_winnt.cfg
-	    ;;
-    WIN95)
-	    MDCPUCFG_H=_win95.cfg
-	    ;;
-    *)
-	    AC_MSG_ERROR([Missing OS_TARGET for ${target}.  Use --enable-win32-target to set.])
-   	;;
-    esac
-
-    case "$target_cpu" in
-    i*86)
-	if test -n "$USE_64"; then
-	    AC_DEFINE(_AMD64_)
-	else		
-	    AC_DEFINE(_X86_)
-            if test -z "$GNU_CC" -a "$MSC_VER" -ge "1700"; then
-                dnl Visual C++ 2012 defaults to -arch:SSE2. Use -arch:IA32
-                dnl to avoid requiring SSE2.
-                CFLAGS="$CFLAGS -arch:IA32"
-            fi
-	fi
-        ;;
-    x86_64)
-	    AC_DEFINE(_AMD64_)
-	    USE_64=1
-	    ;;
-    ia64)
-	    AC_DEFINE(_IA64_)
-	    USE_64=1
-	    ;;
-    *)
-	    AC_DEFINE(_CPU_ARCH_NOT_DEFINED)
-	    ;;
-    esac
-    ;;
-
-*-netbsd*)
-    AC_DEFINE(XP_UNIX)
-    AC_DEFINE(NETBSD)
-    AC_DEFINE(HAVE_BSD_FLOCK)
-    AC_DEFINE(HAVE_SOCKLEN_T)
-    if test -z "$USE_NSPR_THREADS"; then
-        USE_PTHREADS=1
-    fi
-    MDCPUCFG_H=_netbsd.cfg
-    PR_MD_CSRCS=netbsd.c
-
-    DSO_CFLAGS='-fPIC -DPIC'
-    CFLAGS="$CFLAGS -ansi -Wall"
-    CXXFLAGS="$CXXFLAGS -ansi -Wall"
-    MKSHLIB='$(CC) -o $@ $(DSO_LDOPTS)'
-
-    if test -z "$OBJECT_FMT"; then
-        if echo __ELF__ | ${CC-cc} -E - | grep -q __ELF__ 2>/dev/null; then
-            OBJECT_FMT=a.out
-            DLL_SUFFIX=so.1.0
-            DSO_LDOPTS='-shared'
-        else
-            OBJECT_FMT=ELF
-            DLL_SUFFIX=so
-            DSO_LDOPTS='-shared -Wl,-soname,$(notdir $@)'
-        fi
-    fi
-
-    if test "$LIBRUNPATH"; then
-        DSO_LDOPTS="$DSO_LDOPTS -Wl,-R$LIBRUNPATH"
-    fi
-    ;;
-
-*-nto*)
-    AC_DEFINE(XP_UNIX)
-    AC_DEFINE(NTO)
-    AC_DEFINE(_QNX_SOURCE)
-    AC_DEFINE(HAVE_POINTER_LOCALTIME_R)
-    MDCPUCFG_H=_nto.cfg
-    PR_MD_CSRCS=nto.c
-    MKSHLIB='$(CC) $(DSO_LDOPTS) -Wl,-soname -Wl,$(notdir $@) -o $@'
-    DSO_CFLAGS=-fPIC
-    DSO_LDOPTS=-shared
-    OS_LIBS="$OS_LIBS -lsocket"
-    _OPTIMIZE_FLAGS="-O1"
-    _DEBUG_FLAGS="-gstabs"
-	;;
-
-*-openbsd*)
-    AC_DEFINE(XP_UNIX)
-    AC_DEFINE(OPENBSD)
-    AC_DEFINE(HAVE_BSD_FLOCK)
-    AC_DEFINE(HAVE_SOCKLEN_T)
-    CFLAGS="$CFLAGS -ansi -Wall"
-    CXXFLAGS="$CXXFLAGS -ansi -Wall"
-    DLL_SUFFIX=so.1.0
-    DSO_CFLAGS=-fPIC
-    MDCPUCFG_H=_openbsd.cfg
-    PR_MD_CSRCS=openbsd.c
-    OS_LIBS="-lc"
-    if test -z "$USE_NSPR_THREADS"; then
-        USE_PTHREADS=1
-    fi
-    DSO_LDOPTS='-shared -fPIC -Wl,-soname,$(notdir $@)'
-    MKSHLIB='$(CC) $(DSO_LDOPTS) -o $@'
-    ;;
-
-*-osf*)
-    SHELL_OVERRIDE="SHELL		= /usr/bin/ksh"
-    AC_DEFINE(XP_UNIX)
-    AC_DEFINE(OSF1)
-    AC_DEFINE(_REENTRANT)
-    # OSF1 and HPUX report the POLLHUP event for a socket when the
-    # shutdown(SHUT_WR) operation is called for the remote end, even though
-    # the socket is still writeable. Use select(), instead of poll(), to
-    # workaround this problem.
-    AC_DEFINE(_PR_POLL_WITH_SELECT)
-
-    if echo "$OS_RELEASE" | egrep -c '(V2.0|V3.2)' 2>/dev/null ; then
-        USE_NSPR_THREADS=1
-    fi
-
-    if test -z "$GNU_CC"; then
-        CC="$CC -std1 -ieee_with_inexact"
-        if test "$OS_RELEASE" != "V2.0"; then
-            CC="$CC -readonly_strings"
-        fi
-        _OPTIMIZE_FLAGS="$_OPTIMIZE_FLAGS -Olimit 4000"
-        AC_CHECK_HEADER(machine/builtins.h, AC_DEFINE(OSF1_HAVE_MACHINE_BUILTINS_H))
-    else
-        CFLAGS="$CFLAGS -mieee"
-        CXXFLAGS="$CXXFLAGS -mieee"
-    fi
-
-    if echo $OS_RELEASE | egrep -c '(V2.0|V3.2)' 2>/dev/null; then
-        AC_DEFINE(HAVE_INT_LOCALTIME_R)
-    else
-        AC_DEFINE(HAVE_FCNTL_FILE_LOCKING)
-        AC_DEFINE(HAVE_POINTER_LOCALTIME_R)
-    fi
-    if echo $OS_RELEASE | grep -c V4.0 >/dev/null; then
-        AC_DEFINE(OSF1V4_MAP_PRIVATE_BUG)
-    fi
-    DSO_LDOPTS='-shared -all -expect_unresolved "*" -soname $(notdir $@)'
-    MDCPUCFG_H=_osf1.cfg
-    PR_MD_CSRCS=osf1.c
-    ;;
-
-*-qnx*)
-    AC_DEFINE(XP_UNIX)
-    AC_DEFINE(QNX)
-    AC_DEFINE(_PR_NEED_H_ERRNO)
-    USE_NSPR_THREADS=1
-    MDCPUCFG_H=_qnx.cfg
-    PR_MD_CSRCS=qnx.c
-    ;;
-
-*-riscos*)
-    AC_DEFINE(XP_UNIX)
-    AC_DEFINE(RISCOS)
-    AC_DEFINE(_PR_NEED_H_ERRNO)
-    USE_PTHREADS=1
-    MDCPUCFG_H=_riscos.cfg
-    PR_MD_CSRCS=riscos.c
-    DSO_CFLAGS=-fPIC
-    DSO_LDOPTS='-shared -Wl,-soname -Wl,$(notdir $@)'
-    MKSHLIB='$(CC) $(DSO_LDOPTS) -o $@'
-    ;;
-
-*-*-sco*)
-    AC_DEFINE(XP_UNIX)
-    AC_DEFINE(SCO)
-    AC_DEFINE(sco)
-    AC_DEFINE(SYSV)
-    AC_DEFINE(_SVID3)
-    AC_DEFINE(_PR_NEED_H_ERRNO)
-    CC='cc -b elf -KPIC'
-    CXX='$(NSDEPTH)/build/hcpp CC +.cpp +w'
-    USE_NSPR_THREADS=1
-    CPU_ARCH=x86
-    DSO_LDOPTS='-b elf -G'
-    MDCPUCFG_H=_scoos.cfg
-    PR_MD_SRCS=scoos.c
-    ;;
-
-*-solaris*)
-    if test -z "$USE_NSPR_THREADS"; then
-        USE_PTHREADS=1
-    fi
-    AC_DEFINE(XP_UNIX)
-    AC_DEFINE(SVR4)
-    AC_DEFINE(SYSV)
-    AC_DEFINE(__svr4)
-    AC_DEFINE(__svr4__)
-    AC_DEFINE(SOLARIS)
-    AC_DEFINE(HAVE_FCNTL_FILE_LOCKING)
-    CPU_ARCH=`uname -p`
-    MDCPUCFG_H=_solaris.cfg
-    PR_MD_CSRCS=solaris.c
-    LD=/usr/ccs/bin/ld
-    MKSHLIB='$(CC) $(DSO_LDOPTS) -o $@'
-    RESOLVE_LINK_SYMBOLS=1
-    case "${OS_RELEASE}" in
-    5.8|5.9)
-        ;;
-    *)
-        # It is safe to use the -Bdirect linker flag on Solaris 10 or later.
-        USE_B_DIRECT=1
-        ;;
-    esac
-    if test -n "$GNU_CC"; then
-        DSO_CFLAGS=-fPIC
-        if `$CC -print-prog-name=ld` -v 2>&1 | grep -c GNU >/dev/null; then
-            GCC_USE_GNU_LD=1
-        fi
-        DSO_LDOPTS='-shared -Wl,-h,$(notdir $@),-z,combreloc,-z,defs,-z,ignore' 
-        if test -n "$USE_B_DIRECT"; then
-            DSO_LDOPTS="$DSO_LDOPTS,-Bdirect"
-        fi
-    else
-        DSO_CFLAGS=-KPIC
-        DSO_LDOPTS='-G -h $(notdir $@) -z combreloc -z defs -z ignore'
-        if test -n "$USE_B_DIRECT"; then
-            DSO_LDOPTS="$DSO_LDOPTS -Bdirect"
-        fi
-    fi
-    if test -n "$GNU_CC"; then
-        CFLAGS="$CFLAGS -Wall"
-        CXXFLAGS="$CXXFLAGS -Wall"
-        if test -n "$USE_MDUPDATE"; then
-            CFLAGS="$CFLAGS -MDupdate \$(DEPENDENCIES)"
-            CXXFLAGS="$CXXFLAGS -MDupdate \$(DEPENDENCIES)"
-        fi
-        GCC_AS=`$CC -print-prog-name=as`
-        if test "`echo | $GCC_AS -v 2>&1 | grep -c GNU`" != "0"; then
-            GNU_AS=1
-        fi
-    else
-        CFLAGS="$CFLAGS -xstrconst"
-        CXXFLAGS="$CXXFLAGS -Qoption cg -xstrconst -features=tmplife"
-        if test -z "$MOZ_OPTIMIZE"; then
-            CFLAGS="$CFLAGS -xs"
-            CXXFLAGS="$CXXFLAGS -xs"
-        fi
-        _OPTIMIZE_FLAGS=-xO4
-    fi
-    if test -z "$GNU_AS"; then
-        ASFLAGS="$ASFLAGS -Wa,-P"
-    fi
-    if test -n "$USE_64"; then
-        if test -n "$GNU_CC"; then
-            CC="$CC -m64"
-            CXX="$CXX -m64"
-        else
-            if test "$OS_TEST" = "i86pc"; then
-                CC="$CC -xarch=amd64"
-                CXX="$CXX -xarch=amd64"
-            else
-                CC="$CC -xarch=v9"
-                CXX="$CXX -xarch=v9"
-            fi
-        fi
-    fi
-    if test "$OS_TEST" = "i86pc"; then
-        if test -z "$USE_64"; then
-            AC_DEFINE(i386)
-        fi
-        CPU_ARCH_TAG=_$OS_TEST
-        # The default debug format, DWARF (-g), is not supported by gcc
-        # on i386-ANY-sysv4/solaris, but the stabs format is.  It is
-        # assumed that the Solaris assembler /usr/ccs/bin/as is used.
-        # If your gcc uses GNU as, you do not need the -Wa,-s option.
-        if test -n "$MOZ_DEBUG" && test -n "$GNU_CC"; then
-            _DEBUG_FLAGS=-gstabs
-            if test -z "$GNU_AS"; then
-                _DEBUG_FLAGS="$_DEBUG_FLAGS -Wa,-s"
-            fi
-        fi
-    fi
-    case "${target_os}" in
-    solaris2.3*)
-        AC_DEFINE(_PR_NO_LARGE_FILES)
-        ;;
-    solaris2.4*)
-        AC_DEFINE(_PR_NO_LARGE_FILES)
-        ;;
-    solaris2.5*)
-        AC_DEFINE(SOLARIS2_5)    
-        ;;
-    *)
-        AC_DEFINE(_PR_HAVE_OFF64_T)
-        # The lfcompile64(5) man page on Solaris 2.6 says:
-        #     For applications that do not wish to conform to the POSIX or
-        #     X/Open  specifications,  the  64-bit transitional interfaces
-        #     are available by default.  No compile-time flags need to  be
-        #     set.
-        # But gcc 2.7.2.x fails to define _LARGEFILE64_SOURCE by default.
-        # The native compiler, gcc 2.8.x, and egcs don't have this problem.
-        if test -n "$GNU_CC"; then
-            AC_DEFINE(_LARGEFILE64_SOURCE)
-        fi
-        ;;
-    esac
-    case "${target_os}" in
-    solaris2.3*)
-        ;;
-    solaris2.4*)
-        ;;
-    solaris2.5*)
-        ;;
-    solaris2.6*)
-        ;;
-    solaris2.7*)
-        ;;
-    *)
-        # Solaris 8 or higher has IPv6.
-        AC_DEFINE(_PR_INET6)
-        ;;
-    esac
-    if test "$CPU_ARCH" = "sparc"; then
-        # 64-bit Solaris SPARC requires V9 architecture, so the following
-        # is not needed.
-        if test -z "$USE_64"; then
-            ULTRASPARC_LIBRARY=nspr_flt
-        fi
-    fi
-    # Purify requires that binaries linked against nspr also
-    # be linked against -lrt (or -lposix4) so add it to OS_LIBS
-    _rev=`uname -r`
-    _librt=`echo $_rev 5.6 | awk '{ if ($1 > $2) print "-lrt"; else print "-lposix4" }'`
-    OS_LIBS="$OS_LIBS $_librt"
-    ;;
-
-*-sco-sysv5*)
-    AC_DEFINE(XP_UNIX)
-    AC_DEFINE(UNIXWARE)
-    AC_DEFINE(SVR4)
-    AC_DEFINE(SYSV)
-    USE_NSPR_THREADS=1
-    if echo $OS_RELEASE | grep -c 2.1 2>/dev/null; then
-        AC_DEFINE(_PR_NO_LARGE_FILES)
-        CC='$(NSDEPTH)/build/hcc cc'
-        CXX='$(NSDEPTH)/build/hcpp CC'
-        MDCPUCFG_H=_unixware.cfg
-    else
-        AC_DEFINE(_LARGEFILE64_SOURCE)
-        AC_DEFINE(_PR_HAVE_OFF64_T)
-        AC_DEFINE(_PR_HAVE_SOCKADDR_LEN)
-        MDCPUCFG_H=_unixware7.cfg
-    fi
-    PR_MD_CSRCS=unixware.c
-    DSO_LDOPTS=-G
-    CPU_ARCH=x86
-    ;;
-
-*-symbian*)
-    AC_ARG_WITH(symbian-sdk,
-    [  --with-symbian-sdk=SYMBIAN_SDK_DIR
-                          The path to the Symbian SDK],
-    SYMBIAN_SDK_DIR=$withval)
-
-    echo -----------------------------------------------------------------------------
-    echo Building with Symbian SDK in: $SYMBIAN_SDK_DIR
-    echo -----------------------------------------------------------------------------
-
-    AC_DEFINE(XP_UNIX)
-    AC_DEFINE(SYMBIAN)
-    AC_DEFINE(__arm__)
-    AC_DEFINE(__SYMBIAN32__)
-    AC_DEFINE(_UNICODE)
-    AC_DEFINE(NDEBUG)
-    AC_DEFINE(__SUPPORT_CPP_EXCEPTIONS__)
-    AC_DEFINE(MOZ_STDERR_TO_STDOUT)
-    AC_DEFINE(HAVE_FCNTL_FILE_LOCKING)
-    AC_DEFINE(HAVE_SOCKLEN_T)
-    USE_PTHREADS=1
-    LIB_SUFFIX=lib
-    DLL_SUFFIX=dll
-    MKSHLIB=
-    DSO_LDOPTS=
-    DSO_CFLAGS=
-    VISIBILITY_FLAGS=
-    MDCPUCFG_H=_symbian.cfg
-    PR_MD_CSRCS=symbian.c
-    NSINSTALL=nsinstall
-    RANLIB='echo no ranlib '
-    CPU_ARCH=ARM
-    OS_ARCH=SYMBIAN
-    OS_EXE_CFLAGS="$OS_EXE_CFLAGS -D__EXE__"
-    CFLAGS="$CFLAGS -MD -nostdinc"
-    SYMBIAN_SYS_INCLUDE="-I$SYMBIAN_SDK_DIR/Epoc32/include/variant -I$SYMBIAN_SDK_DIR/Epoc32/include -I$SYMBIAN_SDK_DIR/Epoc32/include/stdapis"
-    echo -------------------------------------------------------
-    echo SYMBIAN_SYS_INCLUDE is: $SYMBIAN_SYS_INCLUDE
-    echo -------------------------------------------------------
-    case "$OS_TARGET" in
-    WINSCW)
-        CC=mwccsym2.exe
-        CXX=mwccsym2.exe
-        LD=mwldsym2.exe
-        AR=mwldsym2.exe
-        WINSCW_LD_DIR="\$(SYMBIAN_SDK_DIR)/EPOC32/RELEASE/WINSCW/UDEB"
-        CFLAGS="$CFLAGS -O0 -inline off -wchar_t off -align 4 -warnings on -w nohidevirtual,nounusedexpr -msgstyle gcc -enum int -str pool -exc ms -trigraphs on -nostderr -gccdep -cwd source -i- -I\$(VPATH)"
-        SYMBIAN_SYS_INCLUDE="$SYMBIAN_SYS_INCLUDE -include Symbian_OS_v9.2.hrh"
-        AR_FLAGS="-library -msgstyle gcc -stdlib -subsystem windows -noimplib -o \$@"
-        AC_DEFINE(_DEBUG)
-        AC_DEFINE(__CW32__)
-        AC_DEFINE(__WINS__)
-        AC_DEFINE(__WINSCW__)
-        DEFINES="$DEFINES -U_WIN32"
-	    ;;
-    GCCE)
-        CFLAGS="$CFLAGS -Wall -Wno-unknown-pragmas -fexceptions -march=armv5t -mapcs -pipe -x c -msoft-float"
-        CXXFLAGS="$CXXFLAGS $CFLAGS -Wno-ctor-dtor-privacy"
-        SYMBIAN_SYS_INCLUDE="$SYMBIAN_SYS_INCLUDE -include $SYMBIAN_SDK_DIR/EPOC32/INCLUDE/GCCE/GCCE.h"
-        AC_DEFINE(__GCCE__)
-        AC_DEFINE(__EABI__)
-        DEFINES="$DEFINES -D__PRODUCT_INCLUDE__=$SYMBIAN_SDK_DIR/Epoc32/include/variant/Symbian_OS_v9.2.hrh"
-	    ;;
-    *)
-	    AC_MSG_ERROR([Missing OS_TARGET for ${target}. Set --enable-symbian-target to with 'WINSCW' or 'GCCE'.])
-   	;;
-    esac
-    CFLAGS="$CFLAGS ${SYMBIAN_SYS_INCLUDE}"
-    ;;
-
-*-os2*)
-    AC_DEFINE(XP_OS2)
-    AC_DEFINE(XP_PC)
-    AC_DEFINE(BSD_SELECT)
-    AC_DEFINE(TCPV40HDRS)
-    LIB_SUFFIX=lib
-    DLL_SUFFIX=dll
-    RC=rc.exe
-    PR_MD_ARCH_DIR=os2
-    PROG_SUFFIX=.exe
-    NSINSTALL=nsinstall
-    MDCPUCFG_H=_os2.cfg
-    RESOLVE_LINK_SYMBOLS=1
-
-    AC_DEFINE(OS2)
-    AR=emxomfar
-    AR_FLAGS='r $@'
-    CFLAGS="$CFLAGS -Wall -Zomf"
-    CXXFLAGS="$CFLAGS -Wall -Zomf"
-    MKSHLIB='$(CC) $(DSO_LDOPTS) -o $@'
-    DSO_CFLAGS=
-    DSO_LDOPTS='-Zomf -Zdll'
-    LDFLAGS='-Zmap'
-    _OPTIMIZE_FLAGS="-O2 -s"
-    _DEBUG_FLAGS="-g -fno-inline"
-    if test -n "$MOZ_OPTIMIZE"; then
-      DSO_LDOPTS="$DSO_LDOPTS -Zlinker /EXEPACK:2 -Zlinker /PACKCODE -Zlinker /PACKDATA"
-    fi
-    IMPLIB='emximp -o'
-    FILTER='emxexp -o'
-    if test -n "$MOZ_OS2_HIGH_MEMORY"; then
-      LDFLAGS="$LDFLAGS -Zhigh-mem"
-      AC_DEFINE(MOZ_OS2_HIGH_MEMORY)
-    fi
-
-    # GCC for OS/2 currently predefines these, but we don't want them
-    DEFINES="$DEFINES -Uunix -U__unix -U__unix__"
-    ;;
-
-*)
-    AC_DEFINE(XP_UNIX)
-    ;;
-   
-esac
 
 if test -z "$SKIP_LIBRARY_CHECKS"; then
 dnl ========================================================
